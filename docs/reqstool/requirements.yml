# yaml-language-server: $schema=https://raw.githubusercontent.com/Luftfartsverket/reqstool-client/main/src/reqstool/resources/schemas/v1/requirements.schema.json

metadata:
  urn: reqstool-client
  variant: microservice
  title: Reqstool client
  url: https://github.com/Luftfartsverket/reqstool-client

requirements:
  - id: REQ_001
    title: Indata from local files
    significance: shall
    description: Reqstool should be able to read and parse *.yml files from a local disk.
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_002
    title: Indata from git location
    significance: shall
    description: Reqstool should be able to fetch and parse *.yml files from a git repository.
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_003
    title: Indata from maven artifacts
    significance: shall
    description: Reqstool should be able to fetch, unzip and parse *.yml files from a maven artifact
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_004
    title: Requirement categories from ISO standard
    significance: shall
    description: Requirements shall be categorized using this ISO25000 standard for product quality. See link for further information https://iso25000.com/index.php/en/iso-25000-standards/iso-25010
    categories: [reliability]
    revision: 0.0.1
  - id: REQ_005
    title: Reqstool client should be able to parse all *.yml files from a microservice variant
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_006
    title: Reqstool client should be able to parse all *.yml files except the implementations part of annotations.yml from a system variant
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_007
    title: Reqstool client should be able to parse a requirements.yml file from an external variant
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_008
    title: Requirements.yml file must reside under content root
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_009
    title: Manual_verificaton_results.yml file must reside under content root
    significance: shall
    description: User will have to provide a manual_verificaton_results.yml file in the root of the path provided
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_010
    title: Software_verificaton_cases.yml file must reside under content root
    significance: shall
    description: User will have to provide a software_verificaton_cases.yml file in the root of the path provided
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_011
    title: Reqstool_config.yml file must reside under content root
    significance: may
    description: User will have to provide a reqstool_config.yml file in the root of the path provided if changes to the default path for dynamic files or project root directory are required
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_012
    title: Both static and dynamically generated files should should honor their respective json schemas
    significance: shall
    description: All files that reqstool requires or creates should have a json schema. Reqstool client should validate the content before parsing
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_013
    title: Reqstool client requires a annotations.yml file in order to parse and track implementation and tests
    significance: should
    description: A annotations.yml file should be provided for Reqstool client in order to check implementation ans test results. The default path (target/reqstool) could be altered with the requirements_config file.
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_014
    title: Reqstool client should be able to parse junit test reports
    significance: shall
    description: "Reqstool client should be able to parse test cases from xml data that follows junit xml structure. Sett this link for an example: https://github.com/testmoapp/junitxml#basic-junit-xml-structure"
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_015
    title: Reqstool client should be able to parse data from karate test reports
    significance: shall
    description: Reqstool client should be able to parse test reports from karate test cases
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_016
    title: Reqstool client requires directory path(s) to test report files in order to read and parse the test results
    significance: should
    description: A directory path to where .xml  test report files  resides should be provided for Reqstool client in order to check implementation ans test results. The default paths (target/failsafe-reports | target/surefire-reports) could be altered with the requirements_config file.
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_017
    title: Parse requirements from a maven artifact
    significance: shall
    description: "Reqstool client should be able to parse requirements data from a Maven artifact that follows the correct structure described in the documentation. See: https://luftfartsverket.github.io/reqstool-client/reqstool-client/0.3.0/data.html#maven-artifact-zip-directory-structure"
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_018
    title: Apply filters on imported requirements
    significance: shall
    description: User shall be able to filter in or out specific requirement id's from another source
    categories: [interaction-capability]
    revision: 0.0.1
  - id: REQ_019
    title: Apply filters on imported software verification cases
    significance: shall
    description: User shall be able to filter in or out specific software verification id's from another source
    categories: [interaction-capability]
    revision: 0.0.1
  - id: REQ_020
    title: Custom filter patterns
    significance: may
    description: User may apply a custom filter pattern for svc id's and requirement id's
    categories: [flexibility]
    revision: 0.0.1
  - id: REQ_021
    title: All yml files needed for reqstool-client shall follow their respective json schema.
    significance: shall
    description: Reqstool-client shall validate .yml files and prompt user it errors are detected.
    categories: [functional-suitability]
    revision: 0.0.1
  - id: REQ_022
    title: Reqstool client shall log a warning if duplicate requirement id's are detected during parsing
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_023
    title: Reqstool client shall log a warning if duplicate svc id's are detected during parsing
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_024
    title: Reqstool client shall log a warning if references to non existing requirement id's are detected during parsing
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_025
    title: Reqstool client shall log a warning if references to non existing svc id's are detected during parsing
    significance: shall
    description: User will have to provide a requirements.yml file in the root of the path provided
    categories: [compatibility]
    revision: 0.0.1
  - id: REQ_026
    title: Reqstool client shall exit if it cannot find a requirements.yml file from the path provided
    significance: shall
    description: User will be propted that a required .yml file is missing from the path provided.
    categories: [interaction-capability]
    revision: 0.0.1
  - id: REQ_027
    title: Generate status
    significance: shall
    description: Reqstool should be able to generate status from the collected statistics, listing all requirements and their status on implementation and tests.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_028
    title: Collect statistics for Requirements
    significance: shall
    description: Reqstool should collect statistics for each requirement (SVCs, MVRs, implementation).
    categories: [maintainability]
    revision: 0.4.0
  - id: REQ_029
    title: Write status to file / stdout
    significance: shall
    description: Reqstool should be able to write the status to file or default to stdout if no file specified.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_030
    title: Generate raw JSON from imported models
    significance: shall
    description: Reqstool should be able to generate imported models into raw JSON.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_031
    title: Write generated JSON to file / stdout
    significance: shall
    description: Reqstool should be able to write the JSON to file or default to stdout if no file specified.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_032
    title: Generate report from collected statistics
    significance: shall
    description: Reqstool should be able to generate a report from the collected statistics, listing all requirements and their status.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_033
    title: Group by in report
    significance: shall
    description: Reqstool should be able to generate a report grouped by the categories specified in the requirements or initial/imported urns.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_034
    title: Sort by in report
    significance: shall
    description: Reqstool should be able to sort the generated report.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_035
    title: Write report to file / stdout
    significance: shall
    description: Reqstool should be able to write the report to file / stdout.
    categories: [functional-suitability]
    revision: 0.4.0
  - id: REQ_036
    title: Reqstool shall support requirements that does not require an implementation
    significance: shall
    description: A user should be able to define a requirement that does not need an source code implementation.
    categories: [functional-suitability, flexibility]
    revision: 0.4.5
  - id: REQ_037
    title: Requirements shall have the option to be decommissioned
    significance: shall
    description: A user shall be able to specify the state of the requirement. Whether it is in use or not.
    categories: [maintainability]
    revision: 0.4.6
  - id: REQ_038
    title: SVCs shall have the option to be decommissioned
    significance: shall
    description: A user shall be able to specify the state of the SVC. Whether it is in use or not.
    categories: [maintainability]
    revision: 0.4.6
